version: "3.8"
# Check .env file
# ${JAEGER_ENDPOINT} can be otel-collector or jaeger-all-in-one.
# ${FIRST_APPCONFIG} can be jaeger, opentelemetry or none.
# ${SECOND_APPCONFIG} can be jaeger, opentelemetry or none.
# ${THIRD_APPCONFIG} can be jaeger, opentelemetry or none.
#
services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otel-collector-config.yaml", "--log-level", "DEBUG"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"   # Jaeger UI 
  first-service:
    build: .
    depends_on:
      - jaeger-all-in-one
      - otel-collector
    ports:
      - "80:80"   # HTTP
    environment:
      - JAEGER_SERVICE_NAME=Users-Endpoint
      - JAEGER_ENDPOINT=http://${JAEGER_EP}:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./appconfig_${FIRST_APPCONFIG}.json:/app/appconfig.json
  second-service:
    build: .
    depends_on:
      - jaeger-all-in-one
      - otel-collector
    environment:
      - JAEGER_SERVICE_NAME=Intermediate-Service
      - JAEGER_ENDPOINT=http://${JAEGER_EP}:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./appconfig_${SECOND_APPCONFIG}.json:/app/appconfig.json
  third-service:
    build: .
    depends_on:
      - jaeger-all-in-one
      - otel-collector
    environment:
      - JAEGER_SERVICE_NAME=Backend-Service
      - JAEGER_ENDPOINT=http://${JAEGER_EP}:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./appconfig_${THIRD_APPCONFIG}.json:/app/appconfig.json
      - ./Test.db:/app/Test.db

